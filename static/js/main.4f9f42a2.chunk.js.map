{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selected","selectMethod","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","search","searchWord","onChange","e","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedTodo","useState","user","setUser","getUserFromServer","a","userId","Error","useEffect","href","email","name","App","setTodos","setSelected","filterSelect","setFilterSelect","setSearch","getTodosFromServer","todosArr","filter","item","str","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f9f42a2.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selected: Todo | null | undefined,\n  selectMethod: (value: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selected,\n  selectMethod,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          todos.map((todo) => {\n            return (\n              <tr\n                data-cy=\"todo\"\n                className=\"\"\n                key={todo.id}\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={classNames(\n                    { 'has-text-success': todo.completed },\n                    { 'has-text-danger': !todo.completed },\n                  )}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => selectMethod(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i className={classNames(\n                        'far fa-eye',\n                        { 'fa-eye-slash': selected?.id === todo.id },\n                      )}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            );\n          })\n        }\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  search: string,\n  selectMethod: (value: string) => void,\n  searchWord: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  search,\n  selectMethod,\n  searchWord,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => {\n              selectMethod(e.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={search}\n          onChange={(e) => searchWord(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => searchWord('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Pros = {\n  selectedTodo: Todo,\n  selectMethod: (value: null) => void,\n};\n\nexport const TodoModal: React.FC<Pros> = ({\n  selectedTodo,\n  selectMethod,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const getUserFromServer = async () => {\n    try {\n      setUser(await getUser(selectedTodo.userId));\n    } catch (error) {\n      throw new Error('Error user loading');\n    }\n  };\n\n  useEffect(() => {\n    getUserFromServer();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      { !user && <Loader />}\n\n      {user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`#${selectedTodo?.id}`}\n            </div>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectMethod(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                selectedTodo?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selected, setSelected] = useState<Todo | null>();\n  const [filterSelect, setFilterSelect] = useState('');\n  const [search, setSearch] = useState('');\n\n  const getTodosFromServer = async () => {\n    let todosArr;\n\n    try {\n      todosArr = await getTodos();\n    } catch (error) {\n      throw new Error('Error todos loading');\n    }\n\n    switch (filterSelect) {\n      case 'all':\n        break;\n      case 'active':\n        todosArr = todosArr.filter(item => item.completed);\n        break;\n      case 'completed':\n        todosArr = todosArr.filter(item => !item.completed);\n        break;\n      default:\n        break;\n    }\n\n    const str = search.toLowerCase();\n\n    todosArr = todosArr.filter((item) => {\n      const title = item.title.toLowerCase();\n\n      return title.includes(str);\n    });\n\n    setTodos(todosArr);\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, [filterSelect, selected, search]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                search={search}\n                selectMethod={setFilterSelect}\n                searchWord={setSearch}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                todos.length === 0\n                  ? <Loader />\n                  : <TodoList todos={todos} selectMethod={(value) => setSelected(value)} selected={selected} />\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n      {\n        selected && (\n          <TodoModal\n            selectedTodo={selected}\n            selectMethod={setSelected}\n          />\n        )\n      }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}